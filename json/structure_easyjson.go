// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  jsontest

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( BigStruct ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* BigStruct ) UnmarshalJSON([]byte) error { return nil }
func ( BigStruct ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* BigStruct ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_BigStruct *BigStruct

func ( FileResult ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* FileResult ) UnmarshalJSON([]byte) error { return nil }
func ( FileResult ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* FileResult ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_FileResult *FileResult

func ( MediumStruct ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* MediumStruct ) UnmarshalJSON([]byte) error { return nil }
func ( MediumStruct ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* MediumStruct ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_MediumStruct *MediumStruct

func ( Person ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Person ) UnmarshalJSON([]byte) error { return nil }
func ( Person ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Person ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Person *Person

func ( Record ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Record ) UnmarshalJSON([]byte) error { return nil }
func ( Record ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Record ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Record *Record

func ( Request ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Request ) UnmarshalJSON([]byte) error { return nil }
func ( Request ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Request ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Request *Request

func ( SmallStruct ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SmallStruct ) UnmarshalJSON([]byte) error { return nil }
func ( SmallStruct ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SmallStruct ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SmallStruct *SmallStruct

func ( Topic ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Topic ) UnmarshalJSON([]byte) error { return nil }
func ( Topic ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Topic ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Topic *Topic

func ( User ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* User ) UnmarshalJSON([]byte) error { return nil }
func ( User ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* User ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_User *User
